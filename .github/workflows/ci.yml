name: Test Suite

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v2

      - name: Build and start containers
        working-directory: ./dev
        run: docker-compose up drupal -d --build

      - name: Tag the built Drupal image for pushing to Github packages
        working-directory: ./dev
        run: docker tag dev_drupal:latest docker.pkg.github.com/ackama/dpc-user-management-module/master:latest

      - name: Push Drupal image to Github packages
        working-directory: ./dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: docker push docker.pkg.github.com/ackama/dpc-user-management-module/master:latest

      # - name: Wait for MariaDB container to start
      #   # MariaDB isn't fully ready until it has said "ready for connections"
      #   # **twice**. This while loop gathers the log output from the MariaDB
      #   # container and looks for that magic string. It will loop (sleeping 1
      #   # second on each loop) while it waits to see the magic string twice.
      #   working-directory: ./dev
      #   run: "while [ $(docker-compose logs mysql |grep 'mysqld: ready for connections' | wc -l | tr -d ' ') -ne '2' ]; do echo 'sleeping...' && sleep 1; done"
      #
      # - name: Dump info about running containers (for future debugging)
      #   working-directory: ./dev
      #   run: docker ps -a
      #
      # - name: Install Drupal
      #   working-directory: ./dev
      #   run: docker-compose exec -T drupal /root/install-drupal.sh
      #
      # - name: Run tests
      #   working-directory: ./dev
      #   # Show symfony deprecation warnings but don't fail on them. Many
      #   # warnings come from plugins we depend on and don't control.
      #   run: docker-compose exec -T --env SYMFONY_DEPRECATIONS_HELPER=disabled drupal /root/run-ci.sh
